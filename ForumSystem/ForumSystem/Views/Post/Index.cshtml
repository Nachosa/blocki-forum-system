@using System.Text;
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model ForumSystemDTO.ViewModels.PostViewModels.FilterPosts
@{
	int? loggedUserId = Context.Session.GetInt32("userId");
	bool isAdmin = this.Context.Session.GetInt32("roleId") == 3;
}

@functions {
	private string BuildQueryString()
	{
		var queryBuilder = new StringBuilder();

		var query = Context.Request.Query;

		// Iterate over the query string parameters and append them to the queryBuilder
		foreach (var param in query)
		{
			if (!string.IsNullOrEmpty(param.Key))
			{
				queryBuilder.Append($"&{param.Key}={param.Value}");
			}
		}

		// Append the filtering and sorting parameters
		queryBuilder.Append($"&Title={ViewBag.Title}&Content={ViewBag.Content}&CreatedBy={ViewBag.CreatedBy}&Tag={ViewBag.Tag}&MinDate={ViewBag.MinDate}&MaxDate={ViewBag.MaxDate}&SortBy={ViewBag.SortBy}&SortOrder={ViewBag.SortOrder}");

		return queryBuilder.ToString();
	}
}

<div class="labeled-table-container">
	<h2 class="table-label">All Matching Posts</h2>
	<div>
		<form asp-controller="Post" asp-action="Index" method="get">

			<label for="Title">Title:</label>
			<input type="text" name="Title" value="@ViewBag.Title" />

			<label for="Content">Content:</label>
			<input type="text" name="Content" value="@ViewBag.Content" />

			<label for="CreatedBy">Created by:</label>
			<input type="text" name="CreatedBy" value="@ViewBag.CreatedBy" />

			<label for="Tag">Tag:</label>
			<input type="text" name="Tag" value="@ViewBag.Tag" />

			<label for="MinDate">Start Date:</label>
			<input type="date" name="MinDate" value="@ViewBag.MinDate" />

			<label for="MaxDate">End Date:</label>
			<input type="date" name="MaxDate" value="@ViewBag.MaxDate" />

			<label for="SortBy">Sort By:</label>
			<select name="SortBy">
				<option value="comments" selected="@(ViewBag.SortBy == "comments")">Comments</option>
				<option value="date" selected="@(ViewBag.SortBy == "date")">Date</option>
				<option value="likes" selected="@(ViewBag.SortBy == "likes")">Likes</option>
				<option value="title" selected="@(ViewBag.SortBy == "title")">Title</option>
			</select>

			<label for="SortOrder">Sort Order:</label>
			<select name="SortOrder">
				<option value="asc" selected="@(ViewBag.SortOrder == "asc")">Ascending</option>
				<option value="desc" selected="@(ViewBag.SortOrder == "desc")">Descending</option>
			</select>

			<button type="submit">Apply</button>
		</form>

		@*<form asp-controller="Post" asp-action="Index" method="get">
			<label for="filterBy">Filter By:</label>
			<input type="text" name="filterBy" value="@ViewBag.FilterBy" />
			<label for="sortBy">Sort By:</label>
			<select name="sortBy">
				<option value="">-- Select Sorting Option --</option>
				<option value="title" selected="@(ViewBag.SortBy == "title")">Title</option>
				<option value="date" selected="@(ViewBag.SortBy == "date")">Date</option>
				<option value="likes" selected="@(ViewBag.SortBy == "likes")">Likes</option>
				<option value="comments" selected="@(ViewBag.SortBy == "comments")">Comments</option>
				<!-- Add more sorting options as needed -->
			</select>
			<label for="sortOrder">Sort Order:</label>
			<select name="sortOrder">
				<option value="asc" selected="@(ViewBag.SortOrder == "asc")">Ascending</option>
				<option value="desc" selected="@(ViewBag.SortOrder == "desc")">Descending</option>
			</select>
			<button type="submit">Apply</button>
		</form>*@
	</div>
	@if (Model != null && Model.Posts.Count > 0)
	{
		<table class="custom-table">
			<thead class="custom-table">
				<tr class="custom-table">
					<th>Title</th>
					<th>Author</th>
					<th>Comments</th>
					<th>Created On</th>
					<th>Likes</th>
					<th>Dislikes</th>
					<th>Tags</th>
					@if (isAdmin)
					{
						<th>Delete</th>
					}
				</tr>
			</thead>
			<tbody class="custom-table">
				@foreach (var post in Model.Posts)
				{
					<tr>
						<td class="table-hyperlink"><a asp-controller="Post" asp-action="PostDetails" asp-route-id="@post.Id">@post.Title</a></td>
						<td class="table-hyperlink"><a asp-controller="User" asp-action="UserDetails" asp-route-id="@post.User.Id">@post.User.Username</a></td>
						<td>@post.CommentsCount</td>
						<td>@post.CreatedOn</td>
						<td>@post.LikesCount</td>
						<td>@post.DislikesCount</td>
						<td>@(post.Tags.Any() ? string.Join(", ", post.Tags) : "none")</td>
						@if (isAdmin || loggedUserId==post.User.Id)
						{
							<th>
								<div class="button-container">
									<a asp-controller="Post" asp-action="DeletePost" asp-route-Id="@post.Id" class="button-normal">Delete</a>
								</div>
							</th>
						}
					</tr>
				}
			</tbody>
		</table>

		<div class="pagination-container">
			@if (ViewBag.TotalPages > 1)
			{
				<nav aria-label="Page navigation">
					<ul class="pagination">
						@if (ViewBag.CurrentPage > 1)
						{
							<li class="page-item">
								<a class="page-link" href="/Post/Index?page=@(ViewBag.CurrentPage - 1)@(BuildQueryString())">Previous</a>
							</li>
						}

						@for (int i = 1; i <= ViewBag.TotalPages; i++)
						{
							<li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
								<a class="page-link" href="/Post/Index?page=@i@(BuildQueryString())">@i</a>
							</li>
						}

						@if (ViewBag.CurrentPage < ViewBag.TotalPages)
						{
							<li class="page-item">
								<a class="page-link" href="/Post/Index?page=@(ViewBag.CurrentPage + 1)@(BuildQueryString())">Next</a>
							</li>
						}
					</ul>
				</nav>
			}
		</div>

		@*<div class="pagination-container">
			@if (ViewBag.TotalPages > 1)
			{
				<nav aria-label="Page navigation">
					<ul class="pagination">
						@if (ViewBag.CurrentPage > 1)
						{
							<li class="page-item">
								<a class="page-link" href="/Post/Index?page=@(ViewBag.CurrentPage - 1)">Previous</a>
							</li>
						}

						@for (int i = 1; i <= ViewBag.TotalPages; i++)
						{
							<li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
								<a class="page-link" href="/Post/Index?page=@i">@i</a>
							</li>
						}

						@if (ViewBag.CurrentPage < ViewBag.TotalPages)
						{
							<li class="page-item">
								<a class="page-link" href="/Post/Index?page=@(ViewBag.CurrentPage + 1)">Next</a>
							</li>
						}
					</ul>
				</nav>
			}
		</div>*@
	}
	else
	{
		<p>No posts found.</p>
	}
</div>