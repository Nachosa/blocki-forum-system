// <auto-generated />
using System;
using ForumSystem.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ForumSystem.DataAccess.Migrations
{
    [DbContext(typeof(ForumSystemContext))]
    [Migration("20230713192330_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ForumSystem.DataAccess.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Bitcon is the best!",
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6870),
                            IsDeleted = false,
                            PostId = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            Content = "Bitcoin is trash",
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6877),
                            IsDeleted = false,
                            PostId = 2,
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            Content = "Ethereum is better",
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6882),
                            IsDeleted = false,
                            PostId = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            Content = "Ripple is the new best crypto",
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6887),
                            IsDeleted = false,
                            PostId = 4,
                            UserId = 4
                        });
                });

            modelBuilder.Entity("ForumSystem.DataAccess.Models.Like", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CommentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDislike")
                        .HasColumnType("bit");

                    b.Property<int?>("PostId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CommentId");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId", "PostId", "CommentId")
                        .IsUnique()
                        .HasFilter("[PostId] IS NOT NULL AND [CommentId] IS NOT NULL");

                    b.ToTable("Likes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6891),
                            IsDeleted = false,
                            IsDislike = false,
                            PostId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6898),
                            IsDeleted = false,
                            IsDislike = false,
                            PostId = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6903),
                            IsDeleted = false,
                            IsDislike = false,
                            PostId = 3,
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6906),
                            IsDeleted = false,
                            IsDislike = false,
                            PostId = 4,
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6910),
                            IsDeleted = false,
                            IsDislike = false,
                            PostId = 5,
                            UserId = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6915),
                            IsDeleted = false,
                            IsDislike = false,
                            PostId = 6,
                            UserId = 1
                        },
                        new
                        {
                            Id = 7,
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6919),
                            IsDeleted = false,
                            IsDislike = false,
                            PostId = 7,
                            UserId = 1
                        },
                        new
                        {
                            Id = 8,
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6923),
                            IsDeleted = false,
                            IsDislike = false,
                            PostId = 8,
                            UserId = 1
                        },
                        new
                        {
                            Id = 9,
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6928),
                            IsDeleted = false,
                            IsDislike = false,
                            PostId = 9,
                            UserId = 1
                        },
                        new
                        {
                            Id = 10,
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6933),
                            IsDeleted = false,
                            IsDislike = false,
                            PostId = 10,
                            UserId = 1
                        },
                        new
                        {
                            Id = 11,
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6938),
                            IsDeleted = false,
                            IsDislike = false,
                            PostId = 2,
                            UserId = 14
                        },
                        new
                        {
                            Id = 12,
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6942),
                            IsDeleted = false,
                            IsDislike = false,
                            PostId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 13,
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6946),
                            IsDeleted = false,
                            IsDislike = false,
                            PostId = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 14,
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6951),
                            IsDeleted = false,
                            IsDislike = false,
                            PostId = 4,
                            UserId = 4
                        },
                        new
                        {
                            Id = 15,
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6955),
                            IsDeleted = false,
                            IsDislike = false,
                            PostId = 5,
                            UserId = 5
                        },
                        new
                        {
                            Id = 16,
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6959),
                            IsDeleted = false,
                            IsDislike = false,
                            PostId = 6,
                            UserId = 6
                        },
                        new
                        {
                            Id = 17,
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6963),
                            IsDeleted = false,
                            IsDislike = false,
                            PostId = 7,
                            UserId = 7
                        },
                        new
                        {
                            Id = 18,
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6970),
                            IsDeleted = false,
                            IsDislike = false,
                            PostId = 8,
                            UserId = 8
                        },
                        new
                        {
                            Id = 19,
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6974),
                            IsDeleted = false,
                            IsDislike = false,
                            PostId = 9,
                            UserId = 9
                        },
                        new
                        {
                            Id = 20,
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6978),
                            IsDeleted = false,
                            IsDislike = false,
                            PostId = 10,
                            UserId = 10
                        },
                        new
                        {
                            Id = 21,
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6982),
                            IsDeleted = false,
                            IsDislike = false,
                            PostId = 1,
                            UserId = 11
                        },
                        new
                        {
                            Id = 22,
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6986),
                            IsDeleted = false,
                            IsDislike = false,
                            PostId = 2,
                            UserId = 12
                        },
                        new
                        {
                            Id = 23,
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6990),
                            IsDeleted = false,
                            IsDislike = false,
                            PostId = 3,
                            UserId = 13
                        },
                        new
                        {
                            Id = 24,
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6995),
                            IsDeleted = false,
                            IsDislike = false,
                            PostId = 4,
                            UserId = 14
                        },
                        new
                        {
                            Id = 25,
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6999),
                            IsDeleted = false,
                            IsDislike = false,
                            PostId = 5,
                            UserId = 15
                        });
                });

            modelBuilder.Entity("ForumSystem.DataAccess.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasMaxLength(8192)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "A non-convertible currency is one that one cannot exchange that currency on the international foreign exchange market. Outside the country, this currency has no value — it may also be referred to as locked money. For example, the Indian rupee is a semi-non convertible currency outside of India while dollars can be exchanged in all countries around the world.",
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6810),
                            IsDeleted = false,
                            Title = "WILL BITCOIN BE USED BY THE ENTIRE WORLD?",
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            Content = "If governments decide to opt for a non-convertible currency, it is mainly to prevent capital flight abroad. In effect, by preventing convertibility, residents are then \"forced\" to use the currency in the country. Although the currency cannot leave the territory, it is nevertheless possible via complex financial instruments such as non-deliverable forwards (NDFs).",
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6820),
                            IsDeleted = false,
                            Title = "WHY DO SOME COUNTRIES OPT FOR NON-CONVERTIBLE CURRENCIES?",
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            Content = "Since then, the idea of ​​a single currency or a return to the gold standard has been put back on the table. It’s not a new idea, actually.\r\n\r\nDuring the Bretton Woods agreement, John Mayard Keynes proposed the creation of an international currency called the bancor, fixed by a basket of strong currencies of industrialized countries. His proposal was not accepted but his idea has continued across generations of economists.",
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6826),
                            IsDeleted = false,
                            Title = "THE IDEA OF ​​A SINGLE WORLD CURRENCY.",
                            UserId = 4
                        },
                        new
                        {
                            Id = 4,
                            Content = "f there were no more national currencies, foreign exchange market-based problems and conversion fees would end immediately. Countries would no longer have a monetary barrier and could trade more freely. This would improve and increase international trade. All nations would benefit, especially countries with fragile currencies because there would be no more exchange risk.",
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6831),
                            IsDeleted = false,
                            Title = "WHAT WOULD BE THE BENEFITS OF A WORLD CURRENCY?",
                            UserId = 5
                        },
                        new
                        {
                            Id = 5,
                            Content = "The world’s reserve currency must have a central authority, like the US Federal Reserve, regulating the USD’s supply and usage in global economies. However, Bitcoin is a decentralized currency without any central entity. Instead, it runs on a decentralized blockchain network that validates transactions and mints new coins based on the Bitcoin protocol.",
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6837),
                            IsDeleted = false,
                            Title = "No Central Authority ",
                            UserId = 3
                        },
                        new
                        {
                            Id = 6,
                            Content = "Monero was launched in 2014 as a privacy-focused coin and, according to many, still offers the greatest degree of transaction anonymity compared to other cryptocurrencies.\r\n\r\nAlthough the Monero blockchain is open-source and operates as a decentralized, public network, all transaction details, including sender and recipient addresses and amounts, are cloaked. Monero achieves this using a combination of ring signatures and stealth addresses.",
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6844),
                            IsDeleted = false,
                            Title = "Monero",
                            UserId = 10
                        },
                        new
                        {
                            Id = 7,
                            Content = "Zcash was created in 2014 as a fork of the Bitcoin code named Zerocash, which was conceived with privacy in mind. The development was later taken over by the Electric Coin Company in 2016, which still maintains Zcash to this day.",
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6849),
                            IsDeleted = false,
                            Title = "Zcash",
                            UserId = 11
                        },
                        new
                        {
                            Id = 8,
                            Content = "Dash allows users to implement private transactions via a feature called PrivateSend, which cloaks transaction details. The project was started in 2014 under the name Darkcoin, but rebranded to Dash with a focus on payments in 2015.",
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6854),
                            IsDeleted = false,
                            Title = "Dash",
                            UserId = 12
                        },
                        new
                        {
                            Id = 9,
                            Content = "Privacy coins are often viewed as higher-risk assets by the international Financial Action Task Force (FATF) and by national AML authorities. Some jurisdictions, such as Dubai, outlaw the use of privacy coins entirely.",
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6859),
                            IsDeleted = false,
                            Title = "Privacy Coins and Regulation",
                            UserId = 13
                        },
                        new
                        {
                            Id = 10,
                            Content = "Privacy coins like Monero have no transaction history associated with them, making them more fungible than currencies like Bitcoin. Although BTC is generally considered to be a fungible asset, Bitcoin’s UTXO model means that it’s possible to trace the history of all BTC back to the point it was mined.",
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6865),
                            IsDeleted = false,
                            Title = "Benefits and Risks of Using Privacy Coins",
                            UserId = 14
                        });
                });

            modelBuilder.Entity("ForumSystem.DataAccess.Models.PostTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("TagId");

                    b.ToTable("PostTags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PostId = 1,
                            TagId = 3
                        },
                        new
                        {
                            Id = 2,
                            PostId = 1,
                            TagId = 1
                        },
                        new
                        {
                            Id = 3,
                            PostId = 2,
                            TagId = 3
                        },
                        new
                        {
                            Id = 4,
                            PostId = 3,
                            TagId = 3
                        });
                });

            modelBuilder.Entity("ForumSystem.DataAccess.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Blocked"
                        },
                        new
                        {
                            Id = 2,
                            Name = "User"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("ForumSystem.DataAccess.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(7004),
                            IsDeleted = false,
                            Name = "investments",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(7079),
                            IsDeleted = false,
                            Name = "boolish",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(7088),
                            IsDeleted = false,
                            Name = "future",
                            UserId = 10
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(7091),
                            IsDeleted = false,
                            Name = "safe",
                            UserId = 10
                        });
                });

            modelBuilder.Entity("ForumSystem.DataAccess.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePicPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6575),
                            Email = "gosho@gmail.com",
                            FirstName = "Gosho",
                            IsDeleted = false,
                            LastName = "Goshev",
                            Password = "MTIzNDU2Nzg5MA==",
                            RoleId = 2,
                            Username = "goshoXx123"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6629),
                            Email = "Nikolai@gmail.com",
                            FirstName = "Nikolai",
                            IsDeleted = false,
                            LastName = "Barekov",
                            Password = "MTIzNDU2Nzg5MA==",
                            RoleId = 2,
                            Username = "BarekaXx123"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6638),
                            Email = "boko@gmail.com",
                            FirstName = "Boiko",
                            IsDeleted = false,
                            LastName = "Borisov",
                            Password = "MTIzNDU2Nzg5MA==",
                            ProfilePicPath = "/Images/UserProfilePics/936ef196-0027-4354-871e-f3fc81091f4e_00db5daec132b86843bc6692df3d369b.jpg",
                            RoleId = 2,
                            Username = "BokoMoko"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6644),
                            Email = "Cvetan@gmail.com",
                            FirstName = "Cvetan",
                            IsDeleted = false,
                            LastName = "Cvetanov",
                            Password = "MTIzNDU2Nzg5MA==",
                            ProfilePicPath = "/Images/UserProfilePics/17c63a8c-e0d2-419a-adf7-aa329feafc81_cvetan-cvetanov-pred-fakti-peevski-i-borisov-sa-partnyori-vav-vazdeistvieto-varhu-sadebnata-sistema-1.jpg",
                            RoleId = 2,
                            Username = "Cvete123"
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6650),
                            Email = "Kopeikin@gmail.com",
                            FirstName = "Kosta",
                            IsDeleted = false,
                            LastName = "Kopeikin",
                            Password = "MTIzNDU2Nzg5MA==",
                            ProfilePicPath = "/Images/UserProfilePics/2b643649-b165-49e2-889a-3c2112e88ed7_0414338001637076422_1701823_920x708.jpeg",
                            RoleId = 2,
                            Username = "BrainDamage123"
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6658),
                            Email = "Admin@gmail.com",
                            FirstName = "Admin",
                            IsDeleted = false,
                            LastName = "Adminov",
                            Password = "MTIz",
                            ProfilePicPath = "/Images/UserProfilePics/35c6a7f8-decb-440c-853e-d32b5d0a3c64_3853-136116.jpg",
                            RoleId = 3,
                            Username = "Admin"
                        },
                        new
                        {
                            Id = 7,
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6664),
                            Email = "Andrea@gmail.com",
                            FirstName = "Andrea",
                            IsDeleted = false,
                            LastName = "Paynera",
                            Password = "MTIzNDU2Nzg5MA==",
                            ProfilePicPath = "/Images/UserProfilePics/2c616bd5-e885-440c-add7-ca852b7e72f2_Image_13437876_40_0.jpg",
                            RoleId = 2,
                            Username = "TopAndreika"
                        },
                        new
                        {
                            Id = 8,
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6670),
                            Email = "Emanuela@gmail.com",
                            FirstName = "Emanuela",
                            IsDeleted = false,
                            LastName = "Paynera",
                            Password = "MTIzNDU2Nzg5MA==",
                            RoleId = 2,
                            Username = "TopEmanuelka"
                        },
                        new
                        {
                            Id = 9,
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6675),
                            Email = "Katrin@gmail.com",
                            FirstName = "Katrin",
                            IsDeleted = false,
                            LastName = "lilova",
                            Password = "MTIz",
                            RoleId = 2,
                            Username = "Katrin"
                        },
                        new
                        {
                            Id = 10,
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6769),
                            Email = "Nachosa@gmail.com",
                            FirstName = "Atanas",
                            IsDeleted = false,
                            LastName = "Iliev",
                            Password = "MTIz",
                            ProfilePicPath = "/Images/UserProfilePics/70f63493-d80b-44ed-a8cc-36e8b84b140c_photo.jpeg",
                            RoleId = 2,
                            Username = "Nachosa"
                        },
                        new
                        {
                            Id = 11,
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6778),
                            Email = "Gigov@gmail.com",
                            FirstName = "Nikolai",
                            IsDeleted = false,
                            LastName = "Gigov",
                            Password = "MTIz",
                            RoleId = 2,
                            Username = "Nikolai"
                        },
                        new
                        {
                            Id = 12,
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6784),
                            Email = "Vlad@gmail.com",
                            FirstName = "Vlado",
                            IsDeleted = false,
                            LastName = "Vladov",
                            Password = "MTIz",
                            RoleId = 2,
                            Username = "BatVlad"
                        },
                        new
                        {
                            Id = 13,
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6789),
                            Email = "Vanko@gmail.com",
                            FirstName = "Ivan",
                            IsDeleted = false,
                            LastName = "Vanov",
                            Password = "MTIz",
                            ProfilePicPath = "/Images/UserProfilePics/6c456879-135e-482b-9ba9-bdbda1e6fe8e_309988-profileavatar.jpeg",
                            RoleId = 2,
                            Username = "BatVanko"
                        },
                        new
                        {
                            Id = 14,
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6796),
                            Email = "Peshaka@gmail.com",
                            FirstName = "Petar",
                            IsDeleted = false,
                            LastName = "Ivanov",
                            Password = "MTIz",
                            RoleId = 2,
                            Username = "Peshaka"
                        },
                        new
                        {
                            Id = 15,
                            CreatedOn = new DateTime(2023, 7, 13, 22, 23, 30, 401, DateTimeKind.Local).AddTicks(6801),
                            Email = "Gergi@gmail.com",
                            FirstName = "Georgi",
                            IsDeleted = false,
                            LastName = "Goshev",
                            Password = "MTIz",
                            ProfilePicPath = "/Images/UserProfilePics/c372cf2e-0cab-43a0-81e1-73ea610f9dfd_ddh0598-18d7e667-d117-4b11-8ef0-244eb60bfa45.jpg",
                            RoleId = 2,
                            Username = "BatGergi"
                        });
                });

            modelBuilder.Entity("ForumSystem.DataAccess.Models.Comment", b =>
                {
                    b.HasOne("ForumSystem.DataAccess.Models.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ForumSystem.DataAccess.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ForumSystem.DataAccess.Models.Like", b =>
                {
                    b.HasOne("ForumSystem.DataAccess.Models.Comment", "Comment")
                        .WithMany("Likes")
                        .HasForeignKey("CommentId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ForumSystem.DataAccess.Models.Post", "Post")
                        .WithMany("Likes")
                        .HasForeignKey("PostId");

                    b.HasOne("ForumSystem.DataAccess.Models.User", "User")
                        .WithMany("Likes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Comment");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ForumSystem.DataAccess.Models.Post", b =>
                {
                    b.HasOne("ForumSystem.DataAccess.Models.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ForumSystem.DataAccess.Models.PostTag", b =>
                {
                    b.HasOne("ForumSystem.DataAccess.Models.Post", "Post")
                        .WithMany("Tags")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ForumSystem.DataAccess.Models.Tag", "Tag")
                        .WithMany("Posts")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("ForumSystem.DataAccess.Models.Tag", b =>
                {
                    b.HasOne("ForumSystem.DataAccess.Models.User", "User")
                        .WithMany("Tags")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ForumSystem.DataAccess.Models.User", b =>
                {
                    b.HasOne("ForumSystem.DataAccess.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ForumSystem.DataAccess.Models.Comment", b =>
                {
                    b.Navigation("Likes");
                });

            modelBuilder.Entity("ForumSystem.DataAccess.Models.Post", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Likes");

                    b.Navigation("Tags");
                });

            modelBuilder.Entity("ForumSystem.DataAccess.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("ForumSystem.DataAccess.Models.Tag", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("ForumSystem.DataAccess.Models.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Likes");

                    b.Navigation("Posts");

                    b.Navigation("Tags");
                });
#pragma warning restore 612, 618
        }
    }
}
